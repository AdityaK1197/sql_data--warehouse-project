
# Will solve the business problems by doing Exploratory Data Analysis on Data warehousing Project

===================================================================================================
Step 1
===================================================================================================

I) Database Exploration

select * from INFORMATION_SCHEMA.TABLES ---- To know the tables in database

select * from INFORMATION_SCHEMA.COLUMNS ---- To know the columns present in tables of database

select * from INFORMATION_SCHEMA.VIEWS ---- To know the table views

===================================================================================================
Step 2
===================================================================================================

II) Dimension Exploaration

-----Explore all countries our customers come from------

select 
DISTINCT
country
FROM gold.dim_customers
order by 1

-------Explore all Categories, subcategories & product names---------

select 
DISTINCT
category,
subcategory,
product_name
FROM gold.dim_products
order by 1,2;

===================================================================================================
Step 3
===================================================================================================

III) Date Range Exploaration


----Let's understand Age demographs of customers----

select
MAX(birthdate) As 'Youngest Customer',
DATEDIFF(YEAR,MAX(birthdate),GETDATE()) As 'Youngest Customer Age',
MIN(birthdate) As 'Oldest Customer Age',
DATEDIFF(YEAR,MIN(birthdate),GETDATE()) As 'Oldest Customer Age'
From gold.dim_customers 

----Let's check when the first and last order was placed----

SELECT
CASt(MIN(order_date) As DATETIME2)  'First Order Date & Time',
CASt(MAX(order_date) As DATETIME2)  'Last Order Date & Time',
DATEDIFF(MONTH,MIN(order_date),MAX(order_date)) As 'Business Tenure in Months'
FROM gold.fact_sales

===================================================================================================
Step 4
===================================================================================================

IV) Exploring the business Measures

-------- Lets calculate total Sales -------
select 
SUM(sales) AS 'Total Sales'
FROM gold.fact_sales 

---------How many orders were placed--------
select 
COUNT(DISTINCT order_number) as 'Order Count'
from gold.fact_sales

----------How many qty were sold---------------
select 
SUM(quantity) as 'Quantity Sold'
from gold.fact_sales

-----------what is the Avg cost of products---------
select 
AVG(price) as 'Avg Price'
from gold.fact_sales

---------How Many Products we have-------------
select 
COUNT(DISTINCT product_key) as 'product Count'
from gold.dim_products

--------How many customer we have---------

select 
COUNT(DISTINCT customer_key) as 'Customer Count'
from gold.dim_customers

------ All Measures in one ---------

select 
'Total Sales' As 'Measure Name',
SUM(sales) AS 'Measure Value'
FROM gold.fact_sales 
UNION ALL
SELECT
'Total Order Count',
COUNT(DISTINCT order_number) as 'Measure Value' from gold.fact_sales ---- Calculate Total Order Count
UNION ALL
select 
'Total Quantity Sold',
SUM(quantity) as 'Total Quantity Sold' from gold.fact_sales --------Total Qty Sold
UNION ALL
SELECT
'Avg Price',
AVG(price) as 'Avg Price' from gold.fact_sales ------ Avg Cost of All Products
UNION ALL
select 
'Product Count',
COUNT(DISTINCT product_key) as 'Product Count'from gold.dim_products ------ Total Product Count
UNION ALL
select 
'Customer Count',
COUNT(DISTINCT customer_key) as 'Customer Count' from gold.dim_customers ----- Total Count of Customers

===================================================================================================
Step 5
===================================================================================================

V) Magnitude

----Find total number of customers by country----

Select
country,
count(DISTINCT customer_id) As 'Customer Count'
FROM gold.dim_customers
GROUP BY country
ORDER BY 2 desc;

---Find total customers by gender---

Select
gender,
count(DISTINCT customer_id) As 'Total Customers'
FROM gold.dim_customers
GROUP BY gender
ORDER BY 2 desc;

----Find total products by category----

SELECT
category,
count(product_key) 'As Total Products'
FROM gold.dim_products
GROUP BY category
ORDER BY 2 desc;

----What is Avg cost in each category----

SELECT
category,
AVG(cost) 'As Avg Cost'
FROM gold.dim_products
GROUP BY category
ORDER BY 2 desc;

--------What is the total revenue generated by each category---------
SELECT
B.category,
SUM(sales) 'As Total Sales'
FROM gold.fact_sales A
LEFT JOIN gold.dim_products B on a.product_key = b.product_key
GROUP BY category
ORDER BY 2 desc;


----------What is the revenue generated by each customer---------

SELECT 
B.customer_key,
B.firstname,
B.lastname,
SUM(A.sales) As 'Revenue'
FROM gold.fact_sales A
LEFT JOIN gold.dim_customers B on A.customer_key = B.customer_key
GROUP BY 
B.customer_key,
B.firstname,
B.lastname
Order BY [Revenue] Desc;

------What is the distribution of items sold across countries----------

SELECT
B.country,
sum(A.quantity) As 'Total Qty Sold'
from gold.fact_sales A
LEFT JOIN gold.dim_customers  B on B.customer_key = A.customer_key
LEFT JOIN gold.dim_products C on C.product_key = A.product_key
GROUP BY 
B.country
ORDER BY [Total Qty Sold] DESC;

===================================================================================================
Step 6
===================================================================================================

VI) Analysing TOP N and Bottom N  

----------What are TOP 5 revenue generating products-----------

select
TOP 5
B.product_name,
SUM(A.sales) As 'Total Revenue'
FROM gold.fact_sales A
LEFT JOIN gold.dim_products B ON A.product_key = B.product_key
GROUP BY b.product_name
ORDER BY [Total Revenue] DESC;

----------What are Worst 5 revenue generating products-----------

select
TOP 5
B.product_name,
SUM(A.sales) As 'Total Revenue'
FROM gold.fact_sales A
LEFT JOIN gold.dim_products B ON A.product_key = B.product_key
GROUP BY b.product_name
ORDER BY [Total Revenue] ASC;

---------What are TOP 5 revenue generating products using window function-----------

SELECT * FROM
(
select
B.product_name,
SUM(A.sales) As 'Total Revenue',
ROW_NUMBER() OVER (ORDER BY SUM(A.sales) DESC) As product_rank
FROM gold.fact_sales A
LEFT JOIN gold.dim_products B ON A.product_key = B.product_key
GROUP BY b.product_name ) A
WHERE A.product_rank <= 5

---------What are Worst 5 revenue generating products using window function-----------


SELECT * FROM
(
select
B.product_name,
SUM(A.sales) As 'Total Revenue',
ROW_NUMBER() OVER (ORDER BY SUM(A.sales) ASC) As product_rank
FROM gold.fact_sales A
LEFT JOIN gold.dim_products B ON A.product_key = B.product_key
GROUP BY b.product_name ) A
WHERE A.product_rank <= 5

----------Find top 3 customers with highest orders-----------

select
TOP 3
B.customer_key,
B.firstname,
B.lastname,
COUNT(DISTINCT A.order_number) As 'Total Order'
FROM gold.fact_sales A
LEFT JOIN gold.dim_customers B ON B.customer_key = A.customer_key
GROUP BY 
B.customer_key,
B.firstname,
B.lastname
ORDER BY [Total Order] DESC;

----------Find bottom 3 customers with fewest orders-----------

select
TOP 3
B.customer_key,
B.firstname,
B.lastname,
COUNT(DISTINCT A.order_number) As 'Total Order'
FROM gold.fact_sales A
LEFT JOIN gold.dim_customers B ON B.customer_key = A.customer_key
GROUP BY 
B.customer_key,
B.firstname,
B.lastname
ORDER BY [Total Order] ASC;
